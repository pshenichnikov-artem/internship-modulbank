services:

  account-db:
    image: postgres:16
    container_name: account-db
    platform: linux/amd64
    environment:
      - POSTGRES_DB=${ACCOUNT_DB}
      - POSTGRES_USER=${ACCOUNT_DB_USER}
      - POSTGRES_PASSWORD=${ACCOUNT_DB_PASSWORD}
    ports:
      - "${ACCOUNT_DB_PORT}:5432"
    volumes:
      - account_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "logging_collector=off", "-c", "log_statement=none", "-c", "log_min_messages=panic", "-c", "log_checkpoints=off", "-c", "log_connections=off", "-c", "log_disconnections=off"]
    restart: unless-stopped

  keycloak-db:
    image: postgres:16
    container_name: keycloak-db
    platform: linux/amd64
    environment:
      - POSTGRES_DB=${KEYCLOAK_DB}
      - POSTGRES_USER=${KEYCLOAK_DB_USER}
      - POSTGRES_PASSWORD=${KEYCLOAK_DB_PASSWORD}
    ports:
      - "${KEYCLOAK_DB_PORT}:5432"
    volumes:
      - keycloak_data:/var/lib/postgresql/data
    command: ["postgres", "-c", "logging_collector=off", "-c", "log_statement=none", "-c", "log_min_messages=panic", "-c", "log_checkpoints=off", "-c", "log_connections=off", "-c", "log_disconnections=off"]
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:26.1.1
    container_name: keycloak
    platform: linux/amd64
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db:5432/${KEYCLOAK_DB}
      - KC_DB_USERNAME=${KEYCLOAK_DB_USER}
      - KC_DB_PASSWORD=${KEYCLOAK_DB_PASSWORD}
      - KC_HTTP_ENABLED=true
      - KC_LOG_LEVEL=ERROR
      - KC_METRICS_ENABLED=false
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD}
      - KC_HOSTNAME_URL=${AUTHENTICATION_SERVER_URL}
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    command:
      - start-dev
      - --import-realm
    ports:
      - "${KEYCLOAK_PORT}:8080"
    depends_on:
      - keycloak-db
    restart: unless-stopped

   
  rabbitmq:
      image: rabbitmq:3.13-management
      container_name: rabbitmq
      platform: linux/amd64
      environment:

        - RABBITMQ_LOG_LEVEL=warning
      ports:
        - "${RABBIT_AMQP_PORT}:5672" # AMQP
        - "${RABBIT_MANAGEMENT_PORT}:15672" # Management UI
      volumes:
        - rabbitmq_data:/var/lib/rabbitmq
        - ./rabbitmq/definitions.json:/tmp/definitions.json:ro
        - ./rabbitmq/init.sh:/tmp/init.sh:ro
        - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
      entrypoint: ["bash", "/tmp/init.sh"]
      restart: unless-stopped

  account-service:
    build:
      context: .
      dockerfile: AccountService/Dockerfile
    container_name: account-service
    platform: linux/amd64
    ports:
      - "${ACCOUNT_SERVICE_PORT}:80"
    depends_on:
      - keycloak
      - account-db
      - rabbitmq
    volumes:
      - ./scripts/wait-for-all.sh:/tmp/wait-for-all.sh:ro
    entrypoint: ["bash", "/tmp/wait-for-all.sh", "dotnet", "AccountService.dll"]
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - Authentication__AuthenticationServerUrl=${AUTHENTICATION_SERVER_URL}
      - Authentication__Audience=${AUDIENCE}
      - Authentication__Realm=${REALM}
      - Authentication__AdminUsername=${KEYCLOAK_ADMIN}
      - Authentication__AdminPassword=${KEYCLOAK_ADMIN_PASSWORD}
      - ConnectionStrings__DefaultConnection=Host=account-db;Database=${ACCOUNT_DB};Username=${ACCOUNT_DB_USER};Password=${ACCOUNT_DB_PASSWORD}
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Port=${RABBIT_AMQP_PORT}
      - RabbitMq__User=admin
      - RabbitMq__Password=admin
      - RabbitMq__VirtualHost=/
      - Messaging__Exchange=${MESSAGING_EXCHANGE}
      - Messaging__ServiceName=${ACCOUNT_SERVICE_NAME}
      - Messaging__AuditQueueName=account.audit
      - KeycloakPort=${KEYCLOAK_PORT}
    restart: unless-stopped

volumes:
  account_data:
  keycloak_data:
  rabbitmq_data:
